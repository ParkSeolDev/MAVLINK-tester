/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE PARITY_BOG_STATUS PACKING
package tcpserver.src.mavlinklib.common;
import tcpserver.src.mavlinklib.MAVLinkPacket;
import tcpserver.src.mavlinklib.Messages.MAVLinkMessage;
import tcpserver.src.mavlinklib.Messages.MAVLinkPayload;

        
/**
 * BOG controller of Parity drone's status message.
 */
public class msg_parity_bog_status extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_PARITY_BOG_STATUS = 2500;
    public static final int MAVLINK_MSG_ID_PARITY_BOG_STATUS_CRC = 140;
    public static final int MAVLINK_MSG_LENGTH = 30;
    private static final long serialVersionUID = MAVLINK_MSG_ID_PARITY_BOG_STATUS;

      
    /**
     * Tank number
     */
    public int data_01;
      
    /**
     * Inition liquid hydrogen charge
     */
    public int data_02;
      
    /**
     * Current liquid hydrogen remaining
     */
    public int data_03;
      
    /**
     * Estimated remaining flight time
     */
    public int data_04;
      
    /**
     * pressure sensor 1
     */
    public int data_05;
      
    /**
     * pressure sensor 2
     */
    public int data_06;
      
    /**
     * Fuel cell output voltage
     */
    public int data_07;
      
    /**
     * Fuel cell output current
     */
    public int data_08;
      
    /**
     * battery voltage
     */
    public int data_09;
      
    /**
     * battery current
     */
    public int data_10;
      
    /**
     * Heater output voltage
     */
    public int data_11;
      
    /**
     * Heater output current
     */
    public int data_12;
      
    /**
     * TBD1
     */
    public int data_13;
      
    /**
     * TBD2
     */
    public int data_14;
      
    /**
     * TBD3
     */
    public int data_15;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255; // 0
        packet.compid = 190; // 0
        packet.msgid = MAVLINK_MSG_ID_PARITY_BOG_STATUS;
        packet.crc_extra = MAVLINK_MSG_ID_PARITY_BOG_STATUS_CRC;
        packet.payload.putUnsignedShort(data_01);
        packet.payload.putUnsignedShort(data_02);
        packet.payload.putUnsignedShort(data_03);
        packet.payload.putUnsignedShort(data_04);
        packet.payload.putUnsignedShort(data_05);
        packet.payload.putUnsignedShort(data_06);
        packet.payload.putUnsignedShort(data_07);
        packet.payload.putUnsignedShort(data_08);
        packet.payload.putUnsignedShort(data_09);
        packet.payload.putUnsignedShort(data_10);
        packet.payload.putUnsignedShort(data_11);
        packet.payload.putUnsignedShort(data_12);
        packet.payload.putUnsignedShort(data_13);
        packet.payload.putUnsignedShort(data_14);
        packet.payload.putUnsignedShort(data_15);
        
        return packet;
    }

    /**
     * Decode a parity_bog_status message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
        
        this.data_01 = payload.getUnsignedShort();
        this.data_02 = payload.getUnsignedShort();
        this.data_03 = payload.getUnsignedShort();
        this.data_04 = payload.getUnsignedShort();
        this.data_05 = payload.getUnsignedShort();
        this.data_06 = payload.getUnsignedShort();
        this.data_07 = payload.getUnsignedShort();
        this.data_08 = payload.getUnsignedShort();
        this.data_09 = payload.getUnsignedShort();
        this.data_10 = payload.getUnsignedShort();
        this.data_11 = payload.getUnsignedShort();
        this.data_12 = payload.getUnsignedShort();
        this.data_13 = payload.getUnsignedShort();
        this.data_14 = payload.getUnsignedShort();
        this.data_15 = payload.getUnsignedShort();
        
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_parity_bog_status() {
        this.msgid = MAVLINK_MSG_ID_PARITY_BOG_STATUS;
    }
    
    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_parity_bog_status( int data_01, int data_02, int data_03, int data_04, int data_05, int data_06, int data_07, int data_08, int data_09, int data_10, int data_11, int data_12, int data_13, int data_14, int data_15) {
        this.msgid = MAVLINK_MSG_ID_PARITY_BOG_STATUS;

        this.data_01 = data_01;
        this.data_02 = data_02;
        this.data_03 = data_03;
        this.data_04 = data_04;
        this.data_05 = data_05;
        this.data_06 = data_06;
        this.data_07 = data_07;
        this.data_08 = data_08;
        this.data_09 = data_09;
        this.data_10 = data_10;
        this.data_11 = data_11;
        this.data_12 = data_12;
        this.data_13 = data_13;
        this.data_14 = data_14;
        this.data_15 = data_15;
        
    }
    
    /**
     * Constructor for a new message, initializes everything
     */
    public msg_parity_bog_status( int data_01, int data_02, int data_03, int data_04, int data_05, int data_06, int data_07, int data_08, int data_09, int data_10, int data_11, int data_12, int data_13, int data_14, int data_15, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_PARITY_BOG_STATUS;
        this.sysid = sysid;
        this.compid = compid;

        this.data_01 = data_01;
        this.data_02 = data_02;
        this.data_03 = data_03;
        this.data_04 = data_04;
        this.data_05 = data_05;
        this.data_06 = data_06;
        this.data_07 = data_07;
        this.data_08 = data_08;
        this.data_09 = data_09;
        this.data_10 = data_10;
        this.data_11 = data_11;
        this.data_12 = data_12;
        this.data_13 = data_13;
        this.data_14 = data_14;
        this.data_15 = data_15;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_parity_bog_status(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_PARITY_BOG_STATUS;
        
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        unpack(mavLinkPacket.payload);
    }

                                  
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_PARITY_BOG_STATUS - sysid:"+sysid+" compid:"+compid+" data_01:"+data_01+" data_02:"+data_02+" data_03:"+data_03+" data_04:"+data_04+" data_05:"+data_05+" data_06:"+data_06+" data_07:"+data_07+" data_08:"+data_08+" data_09:"+data_09+" data_10:"+data_10+" data_11:"+data_11+" data_12:"+data_12+" data_13:"+data_13+" data_14:"+data_14+" data_15:"+data_15+"";
    }
    
//    /**
//     * Returns a human-readable string of the name of the message
//     */
//    @Override
//    public String name() {
//        return "MAVLINK_MSG_ID_PARITY_BOG_STATUS";
//    }
}
        